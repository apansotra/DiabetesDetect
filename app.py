# -*- coding: utf-8 -*-
"""app

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gNeOrn0Fh4RWCR1Ivt3GcfruwcEAENUS
"""

import pickle
from flask import Flask, render_template, request
import pandas as pd
import numpy as np

#create flask app
app = Flask(__name__)
#load pickle model
model=pickle.load(open("model.pkl","rb"))


@app.route('/', methods=['GET', 'POST'])
def main():
    if request.method == 'GET':
        return(render_template('main.html'))
    if request.method == 'POST':

        Pregnancies = request.form['Pregnancies']
        Glucose = request.form['Glucose']
        BloodPressure = request.form['BloodPressure']
        SkinThickness = request.form['SkinThickness']
        Insulin = request.form['Insulin']
        BMI = request.form['BMI']
        DiabetesPedigreeFunction = request.form['DiabetesPedigreeFunction']
        Age = request.form['Age']
        
        input_variables = pd.DataFrame([[Pregnancies, Glucose, BloodPressure, SkinThickness,Insulin,BMI,DiabetesPedigreeFunction,Age]],
                                       columns=['Pregnancies','Glucose','BloodPressure','SkinThickness','Insulin','BMI','DiabetesPedigreeFunction','Age'],
                                       dtype=float)
        prediction = model.predict(input_variables)[0]
        def res():
            if prediction == 0 :
                return "No"
            elif prediction == 1:
                return "Yes"
        #print(prediction)
        return render_template('main.html',
                                     original_input={'Pregnancies':Pregnancies,
                                                     'Glucose':Glucose,
                                                     'BloodPressure':BloodPressure,
                                                     'SkinThickness':SkinThickness,
                                                     'Insulin':Insulin,
                                                     'BMI':BMI,
                                                     'DiabetesPedigreeFunction':DiabetesPedigreeFunction,
                                                     'Age':Age},
                                     result = res(),
                                     )



'''

@app.route("/")
def index():
  return render_template('index.html')


@app.route("/predict",methods=["POST"])
def predict():
  
  Pregnancies = request.form['Pregnancies']
  Glucose = request.form['Glucose']
  BloodPressure = request.form['BloodPressure']
  SkinThickness = request.form['SkinThickness']
  Insulin = request.form['Insulin']
  BMI = request.form['BMI']
  DiabetesPedigreeFunction = request.form['DiabetesPedigreeFunction']
  Age = request.form['Age']
  
  #float_features=[float(x) for x in request.form.values()]
  #features=[np.array(float_features)]
  #features = np.array([[Pregnancies, Glucose, BloodPressure, SkinThickness,Insulin,BMI,DiabetesPedigreeFunction,Age]])
  features = [Pregnancies, Glucose, BloodPressure, SkinThickness,Insulin,BMI,DiabetesPedigreeFunction,Age]
  features_col = ['Pregnancies','Glucose','BloodPressure','SkinThickness','Insulin','BMI','DiabetesPedigreeFunction','Age']
  features = pd.DataFrame(features)
  print(features)
  features.columns = features_col
  print(features)
  predictions = model.predict(features)[0]
  print(predictions)
  return render_template('index.html',prediction_text="The patient is {}".format(predictions))

'''
if __name__=="__main__":
       app.run(host='localhost', port=5002,debug=True)